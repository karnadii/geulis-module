/*
 * Copyright (c) 2024 Ujang Karnadi
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {

    
    behaviors {
        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_RGUI|MOD_LGUI)>;
        };

        vol_next: vol_next {
            label = "vol_encoder_next";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_NEXT>;

            mods = <(MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LGUI)>;
        };

        vol_prev: vol_prev {
            label = "vol_encoder_prev";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&kp C_PREV>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        media_encoder: media_encoder {
            label = "MEDIA_ENCODER";
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&vol_prev>, <&vol_next>;
        };

        bri_i_hue_i: bri_i_hue_i {
            compatible = "zmk,behavior-mod-morph";
            label = "BRI_I_HUE_I";
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_HUI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        bri_d_hue_d: bri_d_hue_d {
            compatible = "zmk,behavior-mod-morph";
            label = "BRI_D_HUE_D";
            bindings = <&rgb_ug RGB_BRD>, <&rgb_ug RGB_HUD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RGUI|MOD_RSFT)>;
        };

        rgb_encoder: rgb_encoder {
            label = "RGB_ENCODER";
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&bri_d_hue_d>, <&bri_i_hue_i>;
        };

        f12: f12 {
            compatible = "zmk,behavior-mod-morph";
            label = "F12";
            bindings = <&kp F12>, <&kp C_VOL_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f11: f11 {
            compatible = "zmk,behavior-mod-morph";
            label = "F11";
            bindings = <&kp F11>, <&kp C_VOL_DN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f10: f10 {
            compatible = "zmk,behavior-mod-morph";
            label = "F10";
            bindings = <&kp F10>, <&kp C_MUTE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f9: f9 {
            compatible = "zmk,behavior-mod-morph";
            label = "F9";
            bindings = <&kp F9>, <&kp C_NEXT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f8: f8 {
            compatible = "zmk,behavior-mod-morph";
            label = "F8";
            bindings = <&kp F8>, <&kp C_PP>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f7: f7 {
            compatible = "zmk,behavior-mod-morph";
            label = "F7";
            bindings = <&kp F7>, <&kp C_PREV>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f6: f6 {
            compatible = "zmk,behavior-mod-morph";
            label = "F6";
            bindings = <&kp F6>, <&rgb_ug RGB_BRI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f5: f5 {
            compatible = "zmk,behavior-mod-morph";
            label = "F5";
            bindings = <&kp F5>, <&rgb_ug RGB_BRD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f4: f4 {
            compatible = "zmk,behavior-mod-morph";
            label = "F4";
            bindings = <&kp F4>, <&kp LG(E)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f3: f3 {
            compatible = "zmk,behavior-mod-morph";
            label = "F3";
            bindings = <&kp F3>, <&kp LG(TAB)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f2: f2 {
            compatible = "zmk,behavior-mod-morph";
            label = "F2";
            bindings = <&kp F2>, <&kp C_BRI_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f1: f1 {
            compatible = "zmk,behavior-mod-morph";
            label = "F1";
            bindings = <&kp F1>, <&kp C_BRI_DN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        bt_rgb_tog: bt_rgb_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_RGB_TOG";
            bindings = <&out OUT_TOG>, <&rgb_ug RGB_TOG>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        bt_rgb_next: bt_rgb_next {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_RGB_NEXT";
            bindings = <&bt BT_NXT>, <&rgb_ug RGB_EFF>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };

        f3_mac: f3_mac {
            compatible = "zmk,behavior-mod-morph";
            label = "F3_MAC";
            bindings = <&kp F3>, <&kp LC(UP_ARROW)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LGUI|MOD_RSFT|MOD_RGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Windows";
            bindings = <
&kp C_MUTE     &gresc          &kp N1    &kp N2  &kp N3       &kp N4    &kp N5     &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS  &kp EQUAL  &bspc_del &kp DEL
&kp PAGE_UP    &kp TAB         &kp Q     &kp W   &kp E        &kp R     &kp T      &kp Y   &kp U   &kp I      &kp O    &kp P     &kp LBKT   &kp RBKT   &kp BACKSLASH
&kp PAGE_DOWN  &mt LCTRL CAPS  &kp A     &kp S   &kp D        &kp F     &kp G      &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT    &kp RET
&kp LSHFT      &kp Z           &kp X     &kp C   &kp V        &kp B     &kp B      &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT  &kp DEL
&kp LCTRL      &kp LGUI        &kp LALT  &mo 3   &lt 2 SPACE  &kp RALT  &kp RCTRL
            >;

            sensor-bindings = <&media_encoder 0 0>;
        };

        macos {
            label = "Macos";
            bindings = <

&kp C_MUTE     &gresc          &kp N1    &kp N2  &kp N3       &kp N4    &kp N5     &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS  &kp EQUAL  &bspc_del  &kp DEL
&kp PAGE_UP    &kp TAB         &kp Q     &kp W   &kp E        &kp R     &kp T      &kp Y   &kp U   &kp I      &kp O    &kp P     &kp LBKT   &kp RBKT   &kp BACKSLASH
&kp PAGE_DOWN  &mt LCTRL CAPS  &kp A     &kp S   &kp D        &kp F     &kp G      &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT    &kp RET
&kp LSHFT      &kp Z           &kp X     &kp C   &kp V        &kp B     &kp B      &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT  &kp DEL
&kp LCTRL      &kp LALT        &kp LGUI  &mo 3   &lt 2 SPACE  &kp RGUI  &kp RCTRL
            >;

            sensor-bindings = <&media_encoder 0 0>;
        };

        functions {
            label = "Functions";
            bindings = <
&kp C_PLAY_PAUSE  &kp TILDE     &f1           &f2           &f3           &f4           &f5           &f6    &f7       &f8       &f9        &f10   &f11       &f12          &bt_rgb_tog  &none
&kp HOME          &bt_rgb_next  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none     &kp UP    &none      &none  &none      &none         &none
&kp END           &none         &none         &none         &none         &none         &none         &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none      &tog 1
&kp LSHFT         &none         &none         &none         &none         &none         &none         &none  &none     &none     &none      &none  &kp RSHFT  &bt_rgb_next
&kp LCTRL         &trans        &trans        &none         &none         &trans        &kp RCTRL
            >;

            sensor-bindings = <&rgb_encoder 0 0>;
        };

        settings {
            label = "Settings";
            bindings = <
&soft_off    &ext_power EP_TOG  &kp C_BRI_DEC  &kp C_BRI_INC  &kp LG(TAB)   &kp LG(E)     &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp C_PREV       &kp C_PP         &kp C_NEXT       &kp C_MUTE       &kp C_VOL_DN  &kp C_VOL_UP  &rgb_ug RGB_TOG  &none
&sys_reset   &out OUT_TOG       &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &none         &none         &rgb_ug RGB_EFF
&bootloader  &none              &none          &none          &none         &none         &none            &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &none         &tog 1
&none        &none              &none          &none          &none         &none         &none            &none            &none            &none            &none            &none            &none         &none
&none        &none              &none          &none          &none         &none         &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        extra1 {
            status = "reserved";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        extra2 {
            status = "reserved";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
