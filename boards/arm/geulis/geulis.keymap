#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// #define SPLIT_BACKSPACE true

/ {
     chosen {
        zmk,physical-layout =
        #ifdef SPLIT_BACKSPACE
            &split_backspace_layout;
        #else
            &no_split_backspace_layout;
        #endif
    };

    behaviors {
        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        vol_next: vol_next {
            label = "vol_encoder_next";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_NEXT>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        vol_prev: vol_prev {
            label = "vol_encoder_prev";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&kp C_PREV>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        media_encoder: media_encoder {
            label = "MEDIA_ENCODER";
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&vol_prev>, <&vol_next>;
        };

        bri_i_hue_i: bri_i_hue_i {
            compatible = "zmk,behavior-mod-morph";
            label = "BRI_I_HUE_I";
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_HUI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LALT|MOD_LCTL|MOD_RCTL|MOD_RSFT|MOD_RALT)>;
        };

        bri_d_hue_d: bri_d_hue_d {
            compatible = "zmk,behavior-mod-morph";
            label = "BRI_D_HUE_D";
            bindings = <&rgb_ug RGB_BRD>, <&rgb_ug RGB_HUD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LALT|MOD_LCTL|MOD_RCTL|MOD_RSFT|MOD_RALT)>;
        };

        rgb_encoder: rgb_encoder {
            label = "RGB_ENCODER";
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&bri_d_hue_d>, <&bri_i_hue_i>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Windows";
            bindings = <
            #ifdef  SPLIT_BACKSPACE
                &kp C_MUTE     &gresc          &kp N1    &kp N2  &kp N3       &kp N4    &kp N5     &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS  &kp EQUAL  &bspc_del &kp DEL
            #else
                &kp C_MUTE     &gresc          &kp N1    &kp N2  &kp N3       &kp N4    &kp N5     &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS  &kp EQUAL  &bspc_del
            #endif
                &kp PAGE_UP    &kp TAB         &kp Q     &kp W   &kp E        &kp R     &kp T      &kp Y   &kp U   &kp I      &kp O    &kp P     &kp LBKT   &kp RBKT   &kp BACKSLASH
                &kp PAGE_DOWN  &mt LCTRL CAPS  &kp A     &kp S   &kp D        &kp F     &kp G      &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT    &kp RET
                &kp LSHFT      &kp Z           &kp X     &kp C   &kp V        &kp B     &kp B      &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT  &kp DEL
                &kp LCTRL      &kp LGUI        &kp LALT  &mo 3   &lt 2 SPACE  &kp RALT  &kp RCTRL
            >;

            sensor-bindings = <&media_encoder 0 0>;
        };

        macos {
            label = "Macos";
            bindings = <
            #ifdef  SPLIT_BACKSPACE
                &kp C_MUTE     &gresc          &kp N1    &kp N2  &kp N3       &kp N4    &kp N5     &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS  &kp EQUAL  &bspc_del &kp DEL
            #else
                &kp C_MUTE     &gresc          &kp N1    &kp N2  &kp N3       &kp N4    &kp N5     &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS  &kp EQUAL  &bspc_del
            #endif
                &kp PAGE_UP    &kp TAB         &kp Q     &kp W   &kp E        &kp R     &kp T      &kp Y   &kp U   &kp I      &kp O    &kp P     &kp LBKT   &kp RBKT   &kp BACKSLASH
                &kp PAGE_DOWN  &mt LCTRL CAPS  &kp A     &kp S   &kp D        &kp F     &kp G      &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT    &kp RET
                &kp LSHFT      &kp Z           &kp X     &kp C   &kp V        &kp B     &kp B      &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT  &kp DEL
                &kp LCTRL      &kp LALT        &kp LGUI  &mo 3   &lt 2 SPACE  &kp RGUI  &kp RCTRL
            >;

            sensor-bindings = <&media_encoder 0 0>;
        };

        functions {
            label = "Functions";
            bindings = <
            #ifdef  SPLIT_BACKSPACE
                &kp C_PLAY_PAUSE  &kp TILDE     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6  &kp F7    &kp F8    &kp F9     &kp F10  &kp F11    &kp F12         &bt BT_CLR &none
            #else
                &kp C_PLAY_PAUSE  &kp TILDE     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6  &kp F7    &kp F8    &kp F9     &kp F10  &kp F11    &kp F12         &bt BT_CLR
            #endif
                &kp HOME          &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none   &none     &kp UP    &none      &none    &none      &none           &none
                &kp END           &none         &none         &none         &none         &none         &none         &none   &kp LEFT  &kp DOWN  &kp RIGHT  &none    &none      &none
                &kp LSHFT         &none         &none         &none         &none         &none         &none         &none   &none     &none     &none      &none    &kp RSHFT  &bt BT_CLR_ALL
                &kp LCTRL         &kp LALT      &none         &none         &none         &kp RALT      &kp RCTRL
            >;

            sensor-bindings = <&rgb_encoder 0 0>;
        };

        settings {
            label = "Settings";
            bindings = <
            #ifdef  SPLIT_BACKSPACE
                &soft_off    &ext_power EP_TOG  &kp C_BRI_DEC  &kp C_BRIGHTNESS_INC  &kp F3        &kp F4        &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp C_PREV       &kp C_PP         &kp C_NEXT       &kp C_MUTE       &kp C_VOL_DN  &kp C_VOL_UP    &rgb_ug RGB_TOG &none
            #else
                &soft_off    &ext_power EP_TOG  &kp C_BRI_DEC  &kp C_BRIGHTNESS_INC  &kp F3        &kp F4        &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp C_PREV       &kp C_PP         &kp C_NEXT       &kp C_MUTE       &kp C_VOL_DN  &kp C_VOL_UP    &rgb_ug RGB_TOG
            #endif
                &sys_reset   &out OUT_TOG       &bt BT_SEL 0   &bt BT_SEL 1          &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &none         &none           &rgb_ug RGB_EFF
                &bootloader  &none              &none          &none                 &none         &none         &none            &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &none         &none
                &none        &none              &none          &none                 &none         &none         &none            &none            &none            &none            &none            &none            &none         &studio_unlock
                &none        &none              &none          &none                 &none         &none         &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        extra1 {
            status = "reserved";
        };

        extra2 {
            status = "reserved";
        };
        extra1 {
            status = "reserved";
            bindings = <
            bindings = <
            #ifdef  SPLIT_BACKSPACE
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            #else
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans 
            #endif
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        extra2 {
            status = "reserved";
            bindings = <
            #ifdef  SPLIT_BACKSPACE
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            #else
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans 
            #endif
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    
};
